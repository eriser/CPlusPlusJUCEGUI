/*
==============================================================================

This file was auto-generated by the Introjucer  !

It contains the basic startup code for a Juce application.

==============================================================================
*/

#include "../JuceLibraryCode/JuceHeader.h"
//==============================================================================
class MainWindowTutorialApplication : public JUCEApplication
{
public: 
	//==============================================================================
	MainWindowTutorialApplication() {}

	const String getApplicationName() override { return ProjectInfo::projectName; }
	const String getApplicationVersion() override { return ProjectInfo::versionString; }
	bool moreThanOneInstanceAllowed() override { return true; }

	//==============================================================================
	void initialise(const String& commandLine) override
	{
		// This method is where you should put your application's initialisation code..
		//初始化时调用
		String a = "JUCE Practice(1)";
		mainWindow = new MainWindow(a);
	}

	void shutdown() override
	{
		// Add your application's shutdown code here..
		//推出调用
		mainWindow = nullptr; // (deletes our window)
	}

	//==============================================================================
	void systemRequestedQuit() override
	{
		// This is called when the app is being asked to quit: you can ignore this
		// request and let the app carry on running, or call quit() to allow the app to close.
		//退出调用
		quit();
	}

	void anotherInstanceStarted(const String& commandLine) override
	{
		// When another instance of the app is launched while this one is running,
		// this method is invoked, and the commandLine parameter tells you what
		// the other instance's command-line arguments were.
		//另一个程序打开调用
	}

	//==============================================================================
	/*
	This class implements the desktop window that contains an instance of
	our MainContentComponent class. 
	窗口嵌套类
	*/
	class MainWindow : public DocumentWindow
	{
	public:
		MainWindow(String name) : DocumentWindow(name,
			Colours::lightgrey,//lightgrey
			DocumentWindow::closeButton | DocumentWindow::minimiseButton |DocumentWindow::maximiseButton)
		{		
			setBounds(50, 50, 800, 600); //固定像素点设置
			setBoundsRelative(0.25f,0.25f,0.5f,0.5f); //按照屏幕百分比设置
			//centreWithSize(600, 400); //在屏幕中心设置
			setVisible(true);		
			setUsingNativeTitleBar(false);//是否使用操作系统特有的窗口样式默认false
			setName("Hello World");//设置名称
			setTitleBarHeight(40);//设置导航条高(按钮与标签会跟着变化)
			int a = getTitleBarHeight();//获得导航条高
			setTitleBarButtonsRequired(DocumentWindow::allButtons, false);//参数1显示几个按钮，参数2按钮是否居左
			setTitleBarTextCentred(true);//标题是否居中
			setBackgroundColour(Colours::beige);//设置背景颜色
			setResizable(true, true);//继承自ResizableWindow 参数1决定是否可变大小，参数2右下角是否可拖动来改变大小
			setResizeLimits(400, 400, 1000, 600);//设置最小拖动宽高，最大拖动宽高
			setDraggable(true);//设置是否可拖动
			setFullScreen(false);//设置是否全屏
			setMinimised(false);//设置是否最小化
		}

		void closeButtonPressed() override
		{
			// This is called when the user tries to close this window. Here, we'll just
			// ask the app to quit when this happens, but you can change this to do
			// whatever you need.
			//点击了退出按钮
			setName("closing");
			JUCEApplication::getInstance()->systemRequestedQuit();
		}
		void minimiseButtonPressed() override
		{
			//点击了缩小按钮		
			setName("click minimiseButton");
			DocumentWindow::minimiseButtonPressed();
		}
		void maximiseButtonPressed() override
		{
			//点击了放大按钮
			setName("click maximiseButton");
			DocumentWindow::maximiseButtonPressed();
		}
		/* Note: Be careful if you override any DocumentWindow methods - the base
		class uses a lot of them, so by overriding you might break its functionality.
		It's best to do all your work in your content component instead, but if
		you really have to override any DocumentWindow methods, make sure your
		subclass also calls the superclass's method.
		*/

	private:
		JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(MainWindow)
	};

private:
	ScopedPointer<MainWindow> mainWindow;
};

//==============================================================================
// This macro generates the main() routine that launches the app.
START_JUCE_APPLICATION(MainWindowTutorialApplication)
